declare var g: any;
declare var assert: any;
declare var QName: any;
declare var typeRegistry: any;
declare var helper: any;
declare var xsd: any;
declare var debug: any;
declare var EMPTY_PREFIX: any;
declare var namespaces: any;
/**
 * Base class for all elements of WSDL/XSD
 */
declare class Element {
    constructor(nsName: any, attrs: any, options: any);
    _initializeOptions(options: any): void;
    startElement(stack: any, nsName: any, attrs: any, options: any): void;
    endElement(stack: any, nsName: any): void;
    _qnameFor(stack: any, nsName: any, attrs: any, options: any): any;
    addChild(child: any): void;
    unexpected(name: any): void;
    describe(definitions: any): any;
    /**
     * Look up the namespace by prefix
     * @param {string} prefix Namespace prefix
     * @returns {string} Namespace
     */
    getNamespaceURI(prefix: any): any;
    /**
     * Get the target namespace URI
     * @returns {string} Target namespace URI
     */
    getTargetNamespace(): any;
    /**
     * Get the qualified name
     * @returns {QName} Qualified name
     */
    getQName(): any;
    /**
     * Resolve a schema object by qname
     * @param schemas
     * @param elementType
     * @param nsName
     * @returns {*}
     */
    resolveSchemaObject(schemas: any, elementType: any, nsName: any): any;
    postProcess(definitions: any): void;
}
